import 'package:freezed_annotation/freezed_annotation.dart';

// required: associates our `movie_model.dart` with the code generated by Freezed
part 'movie_model.freezed.dart';
// optional: Since our MovieModel  class is serializable, we must add this line.
// But if MovieModel  was not serializable, we could skip it.
part 'movie_model.g.dart';

@freezed
class MovieModel with _$MovieModel {
  const factory MovieModel({
    int? page,
    @JsonKey(name: 'total_results') int? totalResults,
    @JsonKey(name: 'total_pages') int? totalPages,
    List<Result>? results,
  }) = _MovieModel;

  factory MovieModel.fromJson(Map<String, Object?> json) =>
      _$MovieModelFromJson(json);
}

@freezed
class Result with _$Result {
  const factory Result({
    @JsonKey(name: 'vote_count') int? voteCount,
    int? id,
    bool? video,
    @JsonKey(name: 'vote_average') dynamic voteAverage,
    String? title,
    double? popularity,
    @JsonKey(name: 'poster_path') String? posterPath,
    @JsonKey(name: 'original_language') String? originalLanguage,
    @JsonKey(name: 'original_title') String? originalTitle,
    @JsonKey(name: 'genre_ids') List<int>? genreIds,
    @JsonKey(name: 'backdrop_path') String? backdropPath,
    bool? adult,
    String? overview,
    @JsonKey(name: 'release_date') String? releaseDate,
  }) = _Result;

  factory Result.fromJson(Map<String, Object?> json) => _$ResultFromJson(json);
}
